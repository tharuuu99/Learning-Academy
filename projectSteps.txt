//First Video//

1.create mongodb database for class collection
2. create index.js and create collections
3. check api with postman

//second video//

1.create file structure
2.create navbar
3.create hero headers
4.create home
5.create gallery
6. create useAxiosFetch
7.create popular classes and connect with backend
8.create popular teachers and insert data to user collection with using classes id
9.create instructor


//Third video//

*create classes using hoveredCard and headlessUI transition.
*create login part(user)
*create firebase app
*create config/firebase.init.js
*create .env.local
*create AuthProvider.jsx to create various logging based functions.
*create useAuth.jsx
*create useAxiosSecure.jsx
*create useUser.jsx from react tanstack query document.
*import useUser to classes and create currentUser and role functions.
*craete handleSelect function to classes. now when click add to cart it goes to login because of response interceptor of useAxiosSecure.
* install React-Toastify and import and use handling promises
*create axiosSecure.get and toast.promise functions in classes
*create login 
*create GoogleLogin.jsx component.
*create route to register


//Fourth Video//

*create register form using 'React Hook Form'
*create classes add to cart again using alerts.(handleSelect)
*check api again in index.js  that use to handleSelect in classes.jsx .
*did some changes in useAuth

//5th Video//

*create singleClass.jsx.
*create routes for dashboard in router.jsx
*create DashboardLayout.jsx 
*create adminNavItems
*create lastMenuItem
*create logout function.
*create adminNavItems,instructorNavItems,students functions.
*outlet in DashboardLayout.jsx 
*create useScroll.jsx in hooks.
*install npm i react-spinners and use it in dashboard.jsx and dashboardLayout.jsx
*create DashboardNavigate and update router with student routes.
*create StudentCP.jsx


//6th video//

*create route paths for enrolledClass, selectedClass ,myPaymentHistory and AsInstructor 
*create selectedClass.jsx
*npm install moment
*create payment.jsx and create route path.
*install stripe for frontend and import loadStripe and get frontend key.
*create checkoutPage.jsx 
*In React, <> </> is just a shortcut for wrapping multiple elements together without adding an extra HTML tag, like a <div>. 
<>
  <div>Element 1</div>
  <div>Element 2</div>
</>
*create Payment.css and called it in Payment.jsx
*create handleSubmit in checkoutPage.jsx 
*create MyPaymentHistory.jsx
* create asInstructor.jsx

problems
--------

*google login problem
*after submit register its navigate to home. but it should navigate to login.
*when logging out click to cancel its navigate to home.
*problems in singleClass.jsx
*create User dashboard home in proper way.
*In dashboard navbar when in a part hover is also working for button related to that part.
* some mistakes in names of dashboard

